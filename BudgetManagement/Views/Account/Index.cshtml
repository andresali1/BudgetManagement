@model IEnumerable<AccountIndexViewModel>

@{
    ViewData["Title"] = "Cuentas";

    string BalanceFormat(decimal balance)
    {
        return "$ " + Math.Abs(balance).ToString("N0");
    }

    string GetBalanceClass(decimal balance)
    {
        return balance >= 0 ? "active_element" : "passive_element";
    }
}

<h1>Cuentas</h1>
<a asp-action="Create" class="btn btn-primary mb-3">Crear Nueva</a>

<div class="totals-container mb-3">
    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="active_element">
            @BalanceFormat(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Pasivos</strong>
        </div>
        <div class="passive_element">
            @BalanceFormat(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
            @BalanceFormat(Model.Sum(x => x.Balance))
        </div>
    </div>
</div>

<div class="accordion accordion_accounts">
    @foreach(var accountType in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="headerone">
                @{
                    var id = accountType.AccountType.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var accountTypeClass = GetBalanceClass(accountType.Balance);
                }
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="@dataBSTarget">
                    <span class="me-3">
                        <strong>@accountType.AccountType</strong>
                    </span>
                    <span class="@accountTypeClass">
                        <strong>@BalanceFormat(accountType.Balance)</strong>
                    </span>
                </button>
            </h2>

            <div id="@id" class="accordion-collapse collapse show">
                <div>
                    <ul class="list-group">
                        @foreach (var account in accountType.Accounts)
                        {
                            var accountClass = GetBalanceClass(account.Balance);
                            <li class="list-group-item">
                                <span>
                                    <strong>@account.A_Name</strong>
                                    <a asp-action="Edit" asp-route-id="@account.Id" class="btn-primary btn">
                                        <i class="bi-pencil-fill"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@account.Id" class="btn-danger btn">
                                        <i class="bi-trash-fill"></i>
                                    </a>
                                </span>
                                <span class="@accountClass">@BalanceFormat(account.Balance)</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>

<div></div>
